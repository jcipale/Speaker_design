/*--------------------------------------------------------------------------------------------*/
/* speaker_easy.h - Primary header file used to manages data structures and global variables. */
/*--------------------------------------------------------------------------------------------*/
/* Change log:                                                                                */
/*--------------------------------------------------------------------------------------------*/
/* 05/15/2023:                                                                                */
/* Began code development of classes, methods and objects
/*--------------------------------------------------------------------------------------------*/
/*                           Classes, Objects and Methods                                     */
/*--------------------------------------------------------------------------------------------*/
/* struct Speaker is the pointer for the Speaker Driver list.                                 */
/*--------------------------------------------------------------------------------------------*/
/*   Global Variables   */
//char t_cmd[8];

//struct Speaker
struct node
{
	char Part_num[20];
	float Vol_box;
	float Vas;
	float Qts;
	float Qes;
	float Qms;
	float Freq_s;
	float Re;
	float Le;
	float Xmax;
	float Diam;
	float Nom_Imp;
	float Nom_Pwr;
	float Max_Pwr;
	float Freq_Low;
	float Freq_Hi;
	float Sensitivity;
	struct node *next;
	//struct node* nxt_node;
};
/*--------------------------------------------------------------------------------------------*/
void create();
/*--------------------------------------------------------------------------------------------*/
void closed_box_design();
/*--------------------------------------------------------------------------------------------*/
void vented_box_design();
/*--------------------------------------------------------------------------------------------*/
void crossover_design();
/*--------------------------------------------------------------------------------------------*/
void graph_performance();
/*--------------------------------------------------------------------------------------------*/
void save_speaker_data();
/*--------------------------------------------------------------------------------------------*/
void read_speaker_data();
/*--------------------------------------------------------------------------------------------*/
/*                                 end of speaker_easy.h                                      */
/*--------------------------------------------------------------------------------------------*/
